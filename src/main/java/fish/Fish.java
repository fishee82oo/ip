package fish;
import java.io.IOException;

import fish.command.Command;
import fish.storage.Storage;
import fish.task.TaskList;
import fish.ui.BufferingUi;
import fish.ui.Parser;

/**
 * Represents the main logic of the Fish application.
 */
public class Fish {
    private final Storage storage;
    private final TaskList tasks;
    private final BufferingUi ui = new BufferingUi();

    /**
     * Creates a Fish instance with data stored at {@code data/tasks.txt}.
     */
    public Fish() {
        this("data/fish.txt");
    }

    /**
     * Creates a Fish instance using the given file path for storage.
     *
     * @param filePath path of the storage file
     */
    public Fish(String filePath) {
        this.storage = new Storage(filePath);
        TaskList loaded;
        try {
            loaded = new TaskList(storage.load());
        } catch (IOException e) {
            ui.showLoadingError();
            loaded = new TaskList();
        }
        this.tasks = loaded;
    }

    /**
     * Returns the response generated by Fish for the given user input.
     *
     * @param input user command string
     * @return response string to be shown to the user
     */
    public String getResponse(String input) {
        try {
            Command c = Parser.parse(input, tasks);
            c.execute(tasks, ui, storage);
        } catch (FishException e) {
            ui.showError(e.getMessage());
        }
        return ui.flush();
    }

    public String getGreeting() {
        ui.showWelcome();
        return ui.flush();
    }

}
